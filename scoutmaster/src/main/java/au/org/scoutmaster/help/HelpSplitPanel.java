package au.org.scoutmaster.help;

import java.util.concurrent.ExecutionException;

import org.apache.log4j.Logger;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.ExternalResource;
import com.vaadin.shared.ui.BorderStyle;
import com.vaadin.ui.BrowserFrame;
import com.vaadin.ui.Component;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.Label;
import com.vaadin.ui.Link;
import com.vaadin.ui.VerticalLayout;

public class HelpSplitPanel extends HorizontalSplitPanel implements View, HelpPageListener
{

	/**
	 * 
	 */
	private static final long serialVersionUID = 5011140025383708388L;
	@AutoGenerated
	private HorizontalLayout componentPane;
	private HorizontalLayout helpPane;

	Logger logger = Logger.getLogger(HelpSplitPanel.class);

	HelpIndex index = new HelpIndex();
	
	View component;

	public HelpSplitPanel(View component)
	{
		super();
		this.component = component;
		if (component instanceof HelpPageListener)
		{
			((HelpPageListener)component).setHelpPageListener(this);
		}

		setSplitPosition(75, Unit.PERCENTAGE, false);

		setImmediate(true);

		buildMainLayout();
		setSizeFull();
		((Component)component).setSizeFull();
		componentPane.addComponent((Component)component);
		setHelpPageId(((HelpProvider)component).getHelpId());
		


	}

	@Override
	public void enter(ViewChangeEvent event)
	{
		// allow the View we are wrapping to process the enter event in the normal way
		component.enter(event);
	} 
	
	public void setHelpPageId(HelpPageIdentifier helpId)
	{
		setHelp(helpId);

	}

	private void buildMainLayout()
	{

		componentPane = new HorizontalLayout();
		componentPane.setImmediate(false);
		componentPane.setMargin(false);
		componentPane.setSizeFull();

		super.addComponent(componentPane);

		helpPane = new HorizontalLayout();
		helpPane.setImmediate(false);
		helpPane.setMargin(false);
		helpPane.setSizeFull();

		super.addComponent(helpPane);

	}

	@Override
	public void removeAllComponents()
	{
		throw new RuntimeException("Cant remove compoents this way");
	}

	@Override
	public void removeComponent(Component component)
	{
		throw new RuntimeException("Cant remove compoents this way");
	}

	@Override
	public void addComponent(Component component)
	{
		throw new RuntimeException("Cant add compoents this way");
	}

	public void setHelp(HelpPageIdentifier helpId)
	{
		helpPane.removeAllComponents();

		String helpPageId=null;
		try
		{
			helpPageId = index.lookupHelpIndex(helpId);
		}
		catch (ExecutionException e)
		{
			logger.error(e,e);
		}

		if (helpPageId != null)
		{
			// helpPane
			BrowserFrame help = new BrowserFrame("Help (ID=" + helpId + ")");
			help.setSource(new ExternalResource("https://wiki.noojee.com.au/help.php?page_id=" + helpPageId));
			help.setSizeFull();
			help.setStyleName("njadmin-hide-overflow-for-help");

			helpPane.addComponent(help);
			helpPane.addComponent(new Label("Help id is " + helpId));
			helpPane.setExpandRatio(help, 1.0f);
		}
		else
		{
			VerticalLayout help = new VerticalLayout();
			help.setSizeFull();

			Link link = new Link("To create a help page click here", new ExternalResource(
					"https://wiki.noojee.com.au/Context_Help/Noojee_Campaigner/IndexPage"), "wiki", 0, 0,
					BorderStyle.DEFAULT);

			help.addComponent(new Label(
					"Please create a help page in the wiki. The hyper link will take you to the index page in the wiki. You should add an entry for "
							+ helpId + " in the index and create the associated page in the wiki."));
			help.addComponent(link);
			help.addComponent(new Label("Help id is " + helpId));
			helpPane.addComponent(help);
		}
	}

	@Override
	public void setHelpPageListener(HelpPageListener helpSplitPanel)
	{
		throw new RuntimeException("This is the top level HelpPageListener, you cant set the HelpPageListener");
		
	}

	

}
