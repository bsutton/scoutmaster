package au.org.scoutmaster.editors;import org.vaadin.tokenfield.TokenField;import au.org.scoutmaster.dao.ContactDao;import au.org.scoutmaster.dao.TagDao;import au.org.scoutmaster.domain.Contact;import au.org.scoutmaster.domain.Tag;import au.org.scoutmaster.util.FormHelper;import com.vaadin.data.fieldgroup.FieldGroup;import com.vaadin.data.fieldgroup.FieldGroup.CommitException;import com.vaadin.data.util.BeanItem;import com.vaadin.ui.Alignment;import com.vaadin.ui.Button;import com.vaadin.ui.Button.ClickEvent;import com.vaadin.ui.FormLayout;import com.vaadin.ui.HorizontalLayout;import com.vaadin.ui.VerticalLayout;import com.vaadin.ui.Window;public class TagEditor<T> extends Window{	private static final long serialVersionUID = 1L;	private Tag tag;	public FieldGroup fieldGroup = new FieldGroup();	public FormLayout formLayout = new FormLayout();	private FormHelper commonHelp;	private T contact;	public TagEditor(T contact, final Tag tag, final TokenField tokenField)	{		super("New Tag");		this.contact = contact;		VerticalLayout l = new VerticalLayout();		l.setMargin(true);		setContent(l);		this.tag = tag;		setModal(true);		center();		setWidth("500px");		setStyleName("black");		setResizable(false);		commonHelp = new FormHelper(this.formLayout, this.fieldGroup);		commonHelp.bindTextField("Tag Name", Tag.NAME);		commonHelp.bindTextField("Description", Tag.DESCRIPTION);		this.fieldGroup.setItemDataSource(new BeanItem<Tag>(this.tag));		l.addComponent(formLayout);		// layout buttons horizontally		HorizontalLayout hz = new HorizontalLayout();		l.addComponent(hz);		hz.setSpacing(true);		hz.setWidth("100%");		Button dont = new Button("Don't add", new Button.ClickListener()		{			private static final long serialVersionUID = -1198191849568844582L;			public void buttonClick(ClickEvent event)			{				tokenField.addToken(tag.getId());				tokenField.getUI().removeWindow(TagEditor.this);			}		});		hz.addComponent(dont);		hz.setComponentAlignment(dont, Alignment.MIDDLE_LEFT);		Button add = new Button("Add Tag", new Button.ClickListener()		{			private static final long serialVersionUID = 1L;			public void buttonClick(ClickEvent event)			{				TagDao tagDao = new TagDao();				try				{					fieldGroup.commit();					tagDao.persist(tag);					ContactDao daoContact = new ContactDao();					daoContact.addTag((Contact) TagEditor.this.contact, tag);					daoContact.persist((Contact) TagEditor.this.contact);					tokenField.addToken(tag.getId());					tokenField.getUI().removeWindow(TagEditor.this);				}				catch (CommitException e)				{					// TODO Auto-generated catch block					e.printStackTrace();				}			}		});		hz.addComponent(add);		hz.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);	}	}